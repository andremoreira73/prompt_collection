def setup_calculation_agent():
    """
    Sets up the calculation agent
    """

    tools=[chemicals_emission_calculator, substitution_carbon_credits_value]

    calculation_agent_system_prompt = agent_system_prompt_type_1.format(
        role = 'You are an expert in CO2 emissions calculations.',
        tools = """
        1. chemicals_emission_calculator: calculates the annual emissions of a specific chemical; it expects the following
        Formats and inputs for chemicals_emission_calculator:
        - chemical_name: str - the chemical's name
        - annual_volume_ton: float - annual production volume
        - production_footprint_per_ton: float - the CO2 footprint per ton of produced chemical
        - transportation: list[dict] - a list of dictionaries for each transportation step, including distances in km and the respective transportation mode (road, train, ship or air), for instance [{'step':1, 'distance':50, 'mode':'road'}, {'step':2, 'distance':250, 'mode':'rail'}]
        - release_to_atmosphere_ton_p_a: float - how much of the chemical is released to the atmosphere in a year
        - gwp_100: float - the GWP100 value

        2. substitution_carbon_credits_value: calculates the economical value and change in emissions when substituting the baseline chemical by the focus chemical
        Formats and inputs for substitution_carbon_credits_value:
        - total_annual_emission_focus_chemical: float - total annual emission of the focus chemical in tons
        - total_annual_emission_baseline_chemical: float - total annual emission of the baseline chemical in tons
        - co2_price: float - current CO2 price per ton
        """,
        instructions = """
        Use the tools as appropriate. Pay attention on correctly formatting the inputs that the tools need. 
        Once you finished your calculations, the result back to the triage agent.
        """
    )

    # instantiate system prompt function and agent
    create_prompt = customize_function_create_prompt(calculation_agent_system_prompt)
    calculation_agent = create_react_agent(
        "openai:gpt-4o",
        tools=tools,
        prompt=create_prompt,
    )

    return calculation_agent
